---
- hosts: localhost
  become: yes
  vars:
    mysql_container_name: "mysql"
    mysql_root_password: "root_password"  # Change this to a secure password
    mysql_port: 3306

    postgres_container_name: "postgres"
    postgres_password: "postgres_password"  # Change this to a secure password
    postgres_port: 5432

  tasks:
    # Step 1: Ensure Docker is installed
    - name: Ensure Docker is installed
      pacman:
        name: docker
        state: present

    # Step 2: Ensure Docker service is running
    - name: Ensure Docker service is started
      systemd:
        name: docker
        enabled: yes
        state: started

    # Step 3: Pull MySQL Docker image
    - name: Pull MySQL Docker image
      docker_image:
        name: mysql
        tag: latest
        source: pull

    # Step 4: Create and run MySQL container
    - name: Create and run MySQL container
      docker_container:
        name: "{{ mysql_container_name }}"
        image: mysql:latest
        state: started
        restart_policy: always
        ports:
          - "{{ mysql_port }}:3306"
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"

    # Step 5: Pull PostgreSQL Docker image
    - name: Pull PostgreSQL Docker image
      docker_image:
        name: postgres
        tag: latest
        source: pull

    # Step 6: Create and run PostgreSQL container
    - name: Create and run PostgreSQL container
      docker_container:
        name: "{{ postgres_container_name }}"
        image: postgres:latest
        state: started
        restart_policy: always
        ports:
          - "{{ postgres_port }}:5432"
        env:
          POSTGRES_PASSWORD: "{{ postgres_password }}"

    # Step 7: Verify that MySQL container is running
    - name: Ensure MySQL container is running
      docker_container_info:
        name: "{{ mysql_container_name }}"
      register: mysql_info

    - name: Debug MySQL container status
      debug:
        msg: "MySQL is running at port {{ mysql_info.container.Ports[0].PublicPort }}"

    # Step 8: Verify that PostgreSQL container is running
    - name: Ensure PostgreSQL container is running
      docker_container_info:
        name: "{{ postgres_container_name }}"
      register: postgres_info

    - name: Debug PostgreSQL container status
      debug:
        msg: "PostgreSQL is running at port {{ postgres_info.container.Ports[0].PublicPort }}"
